06/28/19
TODO LIST: 

==================
Short-Term
==================

  - [ ] Start looking into how to make this into a chrome extension (hopefully
    this will even be allowed to be an extension). Setup chrome extension
    locally.

==================
Mid-Term
==================
  - [ ] Allow the picker to position itself _above_ the textbox if the
    registered text input is too close to the bottom of the page. 

  - [ ] Ensure this works on non-textbox elements that act as textboxes (by
    using the role="textbox" attribute, or some other method). Look at Gmail as
    an example. Apparently we could use the `window.getSelection()` function to
    help us out here with divs who are contenteditable (which I am guessing is
    usually paired with role="textbox")

  - [ ] Change the fuzzysearch function to prefer exact substring matches first.
    We probably have to implement, or use a package, that efficently calculates
    the "Levenshtein distance", or that tracks the amount of gaps between the
    letters, which we can use to order the results better.

  - [ ] Look different ways to get the exact location of the caret in a `textarea`
    besides using the "textarea-caret" package. This might be the only way.

  - [ ] Write a script to preprocess the emoji.json library and remap it to only
    give us the information we need (remove category and codes from the
    objects). The new object should be keyed on name and the value is the actual
    emoji. The names should also be lower-cased with underscores.

  - [ ] Test Emoji character ranges to ensure the emoji library and Noto are
    displaying them all correctly. Write a test script / html page to do this

  - [ ] Reorganize files

  - [ ] Profile the crap out of this and make more tasks to try and reduce 
  resource consumption as muich as possible 

  - [ ] Write some unit tests

  - [ ] Optimize to allocate less memory. For example:
    * keep references to the suggestion elements, and stop inserting new divs each time.
    * stop recreating empty arrays upon every button press.


==================
Long-Term
==================

  - [ ] Optimize search to prefer frequently used emojis first.

  - [ ] Look into aliasing common words to other emojis that make sense in the
    context. :hello => "waving hand"

  - [ ] Allow users to set basic opt-in / opt-out settings for specific urls.
    Also allow global opt-in / opt-out settings. 

  - [ ] Allow users to choose the preferred color tone for people emojis
    (Extension Setting).

  - [ ] Allow users to choose the preferred emoji scheme for the picker display
    (Extension Setting).

  - [ ] Allow users alias emojis (Extension Setting).

  - [ ] Allow users to load emoji picker on demand rather than automatically 
    appearing (ctrl+space command) (Extension Setting).

  - [ ] Eventually evaluate if Typescript would be better to use, since there
    might be less ceremony around debugging babel related issues. I don't think
    I need to get plugins for all of the es6 features I need when using TS.

  - [ ] Let's try to expand the picker to be more "grid" like, so we can use
    both horizontal and veritcal space. 

  - [ ] Look into other browser extension platforms (firefox?)

